package com.ibm.demo.rcpclient.views;

import org.eclipse.swt.SWT;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.events.SelectionListener;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.Menu;
import org.eclipse.swt.widgets.MenuItem;

import com.ibm.demo.rcpclient.util.ListenerFactory;
import com.ibm.demo.rcpclient.util.WidgetsFactory;

public class FunctionComposite extends Composite {
	private Menu mainMenu;
	private Label contentLabel;
	private Composite contentComposite;
	private SelectionListener buttonListener;
	private Button button;
	public FunctionComposite(Composite parent, int style) {
		super(parent, style);
		// TODO Auto-generated constructor stub
		init();
	}
	public void init(){
		GridLayout layout=new GridLayout(1,false);
		this.setLayout(layout);		
		this.setSize(this.getParent().getSize());
		createControl(this);
//		this.pack();
	}
	public void createControl(Composite parent) {
		if(mainMenu==null){
			mainMenu=WidgetsFactory.createMenu(this.getShell(),SWT.None, null);
		}
		if(contentLabel==null){
			contentLabel=new Label(this.getShell(),SWT.BORDER);
			GridData layoutdata=new GridData(SWT.FILL,SWT.FILL,false,false);
			contentLabel.setLayoutData(layoutdata);
		}
		if(contentComposite==null){
			contentComposite=new Composite(this.getShell(),SWT.BORDER);
			GridData layoutdata=new GridData(SWT.FILL,SWT.FILL,false,false);
			contentComposite.setLayoutData(layoutdata);
		}
		if(buttonListener==null){
			buttonListener=new SelectionListener(){
				@Override
				public void widgetDefaultSelected(SelectionEvent e) {
					// TODO Auto-generated method stub
					
				}

				@Override
				public void widgetSelected(SelectionEvent e) {
					
				}};
		}
		createMenu();
	}
	public void createMenu(){
		MenuItem item1=WidgetsFactory.createCascadeMenuItem(this.getShell(),mainMenu,"&Button",null);
		try {
			WidgetsFactory.createPushMenuItem(item1.getMenu(),"&ArrowButton",null,ListenerFactory.getSelectionListener(FunctionComposite.class.getMethod("__ArrowListener", null)));
			WidgetsFactory.createPushMenuItem(item1.getMenu(), "&CheckButton",null,ListenerFactory.getSelectionListener(FunctionComposite.class.getMethod("__ArrowListener", null)));
			WidgetsFactory.createPushMenuItem(item1.getMenu(), "&RadioButton",null,ListenerFactory.getSelectionListener(FunctionComposite.class.getMethod("__ArrowListener", null)));
			WidgetsFactory.createPushMenuItem(item1.getMenu(), "&ToggleButton",null,ListenerFactory.getSelectionListener(FunctionComposite.class.getMethod("__ArrowListener", null)));
			WidgetsFactory.createPushMenuItem(item1.getMenu(), "&WrapButton",null,ListenerFactory.getSelectionListener(FunctionComposite.class.getMethod("__ArrowListener", null)));
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
		
		MenuItem item2=WidgetsFactory.createCascadeMenuItem(this.getShell(),mainMenu ,"&List",null);
	}
	public void __ArrowListener(){
		
	}
	public void __CheckListener(){
		
	}
	public void __RadioListener(){
	
	}
	public void __ToggleListener(){
	
	}
	public void __WrapListener(){
		
	}
}
